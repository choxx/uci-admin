import { ActivatedRoute, Router } from '@angular/router';
import { OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { GlobalService } from '../../services/global.service';
import { UciService } from '../../services/uci.service';
import { ToasterService } from '../../services/toaster.service';
import { MatDialog } from '@angular/material/dialog';
import * as i0 from "@angular/core";
export declare class ConversationAddComponent implements OnInit {
    private uciService;
    private router;
    private activatedRoute;
    private fb;
    private globalService;
    private toasterService;
    dialog: MatDialog;
    verifyAllModal: any;
    horizontalStepper: any;
    verticalStepper: any;
    currentViewState: string;
    stepIndex: number;
    botLogics: any[];
    userSegments: any[];
    column: string;
    sortDirection: string;
    reverse: boolean;
    collectionListModal: boolean;
    isLoaderShow: boolean;
    isModalLoaderShow: boolean;
    logicFormRequest: {};
    isCheckedTermCondition: boolean;
    conversationForm: FormGroup;
    termsAndConditionModal: boolean;
    verifyAllItemsModal: boolean;
    conversationId: any;
    selectedLogicIndex: any;
    startMinDate: Date;
    endMinDate: any;
    allChecked: boolean;
    isSubmit: boolean;
    isStartingMessageExist: boolean;
    isStartingMessageAvailable: boolean;
    fileErrorStatus: any;
    user: any;
    resourceService: any;
    constructor(uciService: UciService, router: Router, activatedRoute: ActivatedRoute, fb: FormBuilder, globalService: GlobalService, toasterService: ToasterService, dialog: MatDialog);
    ngOnInit(): void;
    userSegment(): void;
    onUserSegmentCancel(): void;
    onUserSegmentAddClick(): void;
    onUserSegmentAdd(segments: any): void;
    onUserSegmentCreate(segment: any): void;
    onUserSegmentDelete(index: any): void;
    nextStep(): void;
    backToStepOne(): void;
    onAddCancel(): void;
    onSubmit(isTriggerBot?: boolean): void;
    startConversation(bot: any): void;
    closeVerifyModal(): void;
    openTermAndConditionModel(): void;
    openItemsVerifyModal(isSubmitBtn: boolean): void;
    getBotDetails(): void;
    onStarringMessageChange(): void;
    onBotLogicModify(bots: any): void;
    static ɵfac: i0.ɵɵFactoryDef<ConversationAddComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<ConversationAddComponent, "lib-conversation-add", never, {}, {}, never, never>;
}
